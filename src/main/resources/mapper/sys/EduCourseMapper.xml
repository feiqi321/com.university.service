<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ovft.configure.sys.dao.EduCourseMapper">
    <resultMap id="BaseResultMap" type="com.ovft.configure.sys.bean.EduCourse">
        <id column="course_id" jdbcType="INTEGER" property="courseId"/>
        <result column="course_name" jdbcType="VARCHAR" property="courseName"/>
        <result column="course_price" jdbcType="DECIMAL" property="coursePrice"/>
        <result column="course_teacher" jdbcType="VARCHAR" property="courseTeacher"/>
        <result column="place_class" jdbcType="VARCHAR" property="placeClass"/>
        <result column="start_date" jdbcType="DATE" property="startDate"/>
        <result column="end_date" jdbcType="DATE" property="endDate"/>
        <result column="people_number" jdbcType="INTEGER" property="peopleNumber"/>
        <result column="school_id" jdbcType="VARCHAR" property="schoolId"/>
        <result column="isenable" jdbcType="INTEGER" property="isenable"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        course_id, course_name, course_price, course_teacher, place_class, start_date, end_date,
        people_number, school_id, isenable
    </sql>
    <select id="selectByExample" parameterType="com.ovft.configure.sys.bean.EduCourseExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from edu_course
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from edu_course
        where course_id = #{courseId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from edu_course
        where course_id = #{courseId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.ovft.configure.sys.bean.EduCourseExample">
        delete from edu_course
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ovft.configure.sys.bean.EduCourse">
        insert into edu_course (course_id, course_name, course_price,
        course_teacher, place_class, start_date,
        end_date, people_number, school_id,
        isenable)
        values (#{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{coursePrice,jdbcType=DECIMAL},
        #{courseTeacher,jdbcType=VARCHAR}, #{placeClass,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE},
        #{endDate,jdbcType=DATE}, #{peopleNumber,jdbcType=INTEGER}, #{schoolId,jdbcType=VARCHAR},
        #{isenable,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.ovft.configure.sys.bean.EduCourse">
        insert into edu_course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="courseId != null">
                course_id,
            </if>
            <if test="courseName != null">
                course_name,
            </if>
            <if test="coursePrice != null">
                course_price,
            </if>
            <if test="courseTeacher != null">
                course_teacher,
            </if>
            <if test="placeClass != null">
                place_class,
            </if>
            <if test="startDate != null">
                start_date,
            </if>
            <if test="endDate != null">
                end_date,
            </if>
            <if test="peopleNumber != null">
                people_number,
            </if>
            <if test="schoolId != null">
                school_id,
            </if>
            <if test="isenable != null">
                isenable,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="courseId != null">
                #{courseId,jdbcType=INTEGER},
            </if>
            <if test="courseName != null">
                #{courseName,jdbcType=VARCHAR},
            </if>
            <if test="coursePrice != null">
                #{coursePrice,jdbcType=DECIMAL},
            </if>
            <if test="courseTeacher != null">
                #{courseTeacher,jdbcType=VARCHAR},
            </if>
            <if test="placeClass != null">
                #{placeClass,jdbcType=VARCHAR},
            </if>
            <if test="startDate != null">
                #{startDate,jdbcType=DATE},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=DATE},
            </if>
            <if test="peopleNumber != null">
                #{peopleNumber,jdbcType=INTEGER},
            </if>
            <if test="schoolId != null">
                #{schoolId,jdbcType=VARCHAR},
            </if>
            <if test="isenable != null">
                #{isenable,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ovft.configure.sys.bean.EduCourseExample"
            resultType="java.lang.Long">
        select count(*) from edu_course
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update edu_course
        <set>
            <if test="record.courseId != null">
                course_id = #{record.courseId,jdbcType=INTEGER},
            </if>
            <if test="record.courseName != null">
                course_name = #{record.courseName,jdbcType=VARCHAR},
            </if>
            <if test="record.coursePrice != null">
                course_price = #{record.coursePrice,jdbcType=DECIMAL},
            </if>
            <if test="record.courseTeacher != null">
                course_teacher = #{record.courseTeacher,jdbcType=VARCHAR},
            </if>
            <if test="record.placeClass != null">
                place_class = #{record.placeClass,jdbcType=VARCHAR},
            </if>
            <if test="record.startDate != null">
                start_date = #{record.startDate,jdbcType=DATE},
            </if>
            <if test="record.endDate != null">
                end_date = #{record.endDate,jdbcType=DATE},
            </if>
            <if test="record.peopleNumber != null">
                people_number = #{record.peopleNumber,jdbcType=INTEGER},
            </if>
            <if test="record.schoolId != null">
                school_id = #{record.schoolId,jdbcType=VARCHAR},
            </if>
            <if test="record.isenable != null">
                isenable = #{record.isenable,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update edu_course
        set course_id = #{record.courseId,jdbcType=INTEGER},
        course_name = #{record.courseName,jdbcType=VARCHAR},
        course_price = #{record.coursePrice,jdbcType=DECIMAL},
        course_teacher = #{record.courseTeacher,jdbcType=VARCHAR},
        place_class = #{record.placeClass,jdbcType=VARCHAR},
        start_date = #{record.startDate,jdbcType=DATE},
        end_date = #{record.endDate,jdbcType=DATE},
        people_number = #{record.peopleNumber,jdbcType=INTEGER},
        school_id = #{record.schoolId,jdbcType=VARCHAR},
        isenable = #{record.isenable,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ovft.configure.sys.bean.EduCourse">
        update edu_course
        <set>
            <if test="courseName != null">
                course_name = #{courseName,jdbcType=VARCHAR},
            </if>
            <if test="coursePrice != null">
                course_price = #{coursePrice,jdbcType=DECIMAL},
            </if>
            <if test="courseTeacher != null">
                course_teacher = #{courseTeacher,jdbcType=VARCHAR},
            </if>
            <if test="placeClass != null">
                place_class = #{placeClass,jdbcType=VARCHAR},
            </if>
            <if test="startDate != null">
                start_date = #{startDate,jdbcType=DATE},
            </if>
            <if test="endDate != null">
                end_date = #{endDate,jdbcType=DATE},
            </if>
            <if test="peopleNumber != null">
                people_number = #{peopleNumber,jdbcType=INTEGER},
            </if>
            <if test="schoolId != null">
                school_id = #{schoolId,jdbcType=VARCHAR},
            </if>
            <if test="isenable != null">
                isenable = #{isenable,jdbcType=INTEGER},
            </if>
        </set>
        where course_id = #{courseId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ovft.configure.sys.bean.EduCourse">
    update edu_course
    set course_name = #{courseName,jdbcType=VARCHAR},
      course_price = #{coursePrice,jdbcType=DECIMAL},
      course_teacher = #{courseTeacher,jdbcType=VARCHAR},
      place_class = #{placeClass,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      people_number = #{peopleNumber,jdbcType=INTEGER},
      school_id = #{schoolId,jdbcType=VARCHAR},
      isenable = #{isenable,jdbcType=INTEGER}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>


    <!--&lt;!&ndash;1.查找专业类别&ndash;&gt;-->
    <!--<select id="listCourseCategoryByShoolId" parameterType="com.ovft.configure.sys.bean.EduCourse"-->
            <!--resultType="com.ovft.configure.sys.bean.EduCourse">-->
        <!--select * from edu_course where school_id =#{schoolId} and isenable=#{isenable}-->
    <!--</select>-->

    <!--1.查找专业类别-->
    <select id="listCourseCategoryByShoolId" parameterType="com.ovft.configure.sys.bean.EduCourse"
    resultType="com.ovft.configure.sys.bean.EduCourse">
    select did,course_id as courseId, course_name as courseName, course_price as coursePrice, course_teacher as courseTeacher,
    place_class as placeClass, start_date as startDate, end_date as endDate,
    people_number as peopleNumber, school_id as schoolId, isenable,isAddQuestion,
    (SELECT name FROM edu_admin where admin_id = edu_course.course_teacher) as teacherName,
    (SELECT school_name FROM edu_school where school_id = edu_course.school_id) as schoolName,
    (SELECT d_name FROM edu_department where did = edu_course.did) as departmentName
    from edu_course
    where 1=1
    <if test="schoolId != null">
    AND school_id = #{schoolId}
    </if>
    <if test="did != null">
    AND did = #{did}
    </if>
    <if test="isenable != null">
    AND isenable = #{isenable}
    </if>
    order by isenable desc, start_date desc
    </select>


    <!--2.查找专业相关报名信息-->
    <select id="queryCourseByCourseId" parameterType="int" resultType="com.ovft.configure.sys.vo.EduCourseVo">
       select
            c.course_id,
            c.course_name,
            c.course_price,
            e1.school_name schoolId,
            e2.name course_teacher,
            c.place_class,
			c.course_price,
			c.place_class,
			c.start_date,
			c.end_date,
			c.people_number
        from edu_course c
        left join edu_school e1 on c.school_id=e1.school_id
        left join edu_admin e2 on c.course_teacher=e2.admin_id
        where course_id =#{course_id}
    </select>

    <!--3.查询每个科目可以报名的人数-->
    <select id="queryAcceptNum" parameterType="int" resultType="int">
        select
        people_number
        from edu_course
        WHERE course_id=#{course_id}
    </select>


    <!--4.课程表-->
    <select id="queryAllTimetable" resultType="com.ovft.configure.sys.vo.EduCourseVo">
     		SELECT
					*
				from
				(
					 select
                        c.course_id,
						e1.school_id,
						e1.school_name school_name,
						e3.week,
                        c.course_name,
                        e2.name course_teacher,
                        c.place_class,
						e3.start_time,
						e3.end_time
             from edu_course c
                left join edu_school e1 on c.school_id=e1.school_id
                left join edu_admin e2 on c.course_teacher=e2.admin_id
				LEFT JOIN edu_class_schedule e3 on e3.course_ids=c.course_id
				) p
				where week=#{week} and school_id=#{schoolId};
    </select>


    <!--3.查询每个科目可以报名的人数-->
    <select id="selectCourseIdBySchoolId" parameterType="int" resultType="int">
                    select
                        course_id
                        from
                        edu_course
                    where
                      school_id=#{schoolId}
    </select>


    <!--4.查询科目相关信息-->
    <select id="queryCourseInfo" parameterType="int" resultType="com.ovft.configure.sys.vo.EduCourseVo">
                  select
                    c.course_id,
                    c.course_name,
                    c.course_price,
                    a.school_name,
                    a.school_id,
                    d.name
                from edu_course c
                LEFT JOIN edu_school a on a.school_id=c.school_id
                LEFT join edu_admin d on  d.admin_id = c.course_teacher
                where course_id =#{courseId}
    </select>

</mapper>