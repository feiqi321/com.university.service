<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ovft.configure.sys.dao.EduCommentMapper">
  <resultMap id="BaseResultMap" type="com.ovft.configure.sys.bean.EduComment">
    <id column="comid" jdbcType="INTEGER" property="comid" />
    <result column="context" jdbcType="VARCHAR" property="context" />
    <result column="newsid" jdbcType="INTEGER" property="newsid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="comtime" jdbcType="TIMESTAMP" property="comtime" />
    <result column="isshow" jdbcType="INTEGER" property="isshow" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comid, context, newsid, uid, comtime, isshow
  </sql>
  <select id="selectByExample" parameterType="com.ovft.configure.sys.bean.EduCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from edu_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from edu_comment
    where comid = #{comid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from edu_comment
    where comid = #{comid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ovft.configure.sys.bean.EduCommentExample">
    delete from edu_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ovft.configure.sys.bean.EduComment">
    insert into edu_comment (comid, context, newsid, 
      uid, comtime, isshow
      )
    values (#{comid,jdbcType=INTEGER}, #{context,jdbcType=VARCHAR}, #{newsid,jdbcType=INTEGER}, 
      #{uid,jdbcType=INTEGER}, #{comtime,jdbcType=TIMESTAMP}, #{isshow,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ovft.configure.sys.bean.EduComment">
    insert into edu_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="comid != null">
        comid,
      </if>
      <if test="context != null">
        context,
      </if>
      <if test="newsid != null">
        newsid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="comtime != null">
        comtime,
      </if>
      <if test="isshow != null">
        isshow,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="comid != null">
        #{comid,jdbcType=INTEGER},
      </if>
      <if test="context != null">
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="newsid != null">
        #{newsid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="comtime != null">
        #{comtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isshow != null">
        #{isshow,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ovft.configure.sys.bean.EduCommentExample" resultType="java.lang.Long">
    select count(*) from edu_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update edu_comment
    <set>
      <if test="record.comid != null">
        comid = #{record.comid,jdbcType=INTEGER},
      </if>
      <if test="record.context != null">
        context = #{record.context,jdbcType=VARCHAR},
      </if>
      <if test="record.newsid != null">
        newsid = #{record.newsid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.comtime != null">
        comtime = #{record.comtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isshow != null">
        isshow = #{record.isshow,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update edu_comment
    set comid = #{record.comid,jdbcType=INTEGER},
      context = #{record.context,jdbcType=VARCHAR},
      newsid = #{record.newsid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      comtime = #{record.comtime,jdbcType=TIMESTAMP},
      isshow = #{record.isshow,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ovft.configure.sys.bean.EduComment">
    update edu_comment
    <set>
      <if test="context != null">
        context = #{context,jdbcType=VARCHAR},
      </if>
      <if test="newsid != null">
        newsid = #{newsid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="comtime != null">
        comtime = #{comtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isshow != null">
        isshow = #{isshow,jdbcType=INTEGER},
      </if>
    </set>
    where comid = #{comid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ovft.configure.sys.bean.EduComment">
    update edu_comment
    set context = #{context,jdbcType=VARCHAR},
      newsid = #{newsid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      comtime = #{comtime,jdbcType=TIMESTAMP},
      isshow = #{isshow,jdbcType=INTEGER}
    where comid = #{comid,jdbcType=INTEGER}
  </update>
</mapper>