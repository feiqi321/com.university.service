<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ovft.configure.sys.dao.EduPayrecordMapper">
    <resultMap id="BaseResultMap" type="com.ovft.configure.sys.bean.EduPayrecord">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="school_id" jdbcType="VARCHAR" property="schoolId"/>
        <result column="school_name" jdbcType="VARCHAR" property="schoolName"/>
        <result column="course_name" jdbcType="VARCHAR" property="courseName"/>
        <result column="course_teacher" jdbcType="VARCHAR" property="courseTeacher"/>
        <result column="course_address" jdbcType="VARCHAR" property="courseAddress"/>
        <result column="course_starttime" jdbcType="VARCHAR" property="courseStarttime"/>
        <result column="start_time" jdbcType="VARCHAR" property="startTime"/>
        <result column="end_time" jdbcType="VARCHAR" property="endTime"/>
        <result column="pay_status" jdbcType="VARCHAR" property="payStatus"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="course_id" jdbcType="INTEGER" property="courseId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, school_id, school_name, course_name, course_teacher, course_address, course_starttime, 
    start_time, end_time, pay_status, user_id, course_id
  </sql>
    <select id="selectByExample" parameterType="com.ovft.configure.sys.bean.EduPayrecordExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from edu_payrecord
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from edu_payrecord
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from edu_payrecord
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.ovft.configure.sys.bean.EduPayrecordExample">
        delete from edu_payrecord
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ovft.configure.sys.bean.EduPayrecord">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into edu_payrecord (school_id, school_name, course_name,
        course_teacher, course_address, course_starttime,
        start_time, end_time, pay_status,
        user_id, course_id,is_delete,order_id)
        values (#{schoolId,jdbcType=VARCHAR}, #{schoolName,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR},
        #{courseTeacher,jdbcType=VARCHAR}, #{courseAddress,jdbcType=VARCHAR}, #{courseStarttime,jdbcType=VARCHAR},
        #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{payStatus,jdbcType=VARCHAR},
        #{userId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER},#{orderId,jdbcType=INTEGER},#{orderId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.ovft.configure.sys.bean.EduPayrecord">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into edu_payrecord
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="schoolId != null">
                school_id,
            </if>
            <if test="schoolName != null">
                school_name,
            </if>
            <if test="courseName != null">
                course_name,
            </if>
            <if test="courseTeacher != null">
                course_teacher,
            </if>
            <if test="courseAddress != null">
                course_address,
            </if>
            <if test="courseStarttime != null">
                course_starttime,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="payStatus != null">
                pay_status,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="schoolId != null">
                #{schoolId,jdbcType=VARCHAR},
            </if>
            <if test="schoolName != null">
                #{schoolName,jdbcType=VARCHAR},
            </if>
            <if test="courseName != null">
                #{courseName,jdbcType=VARCHAR},
            </if>
            <if test="courseTeacher != null">
                #{courseTeacher,jdbcType=VARCHAR},
            </if>
            <if test="courseAddress != null">
                #{courseAddress,jdbcType=VARCHAR},
            </if>
            <if test="courseStarttime != null">
                #{courseStarttime,jdbcType=VARCHAR},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=VARCHAR},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=VARCHAR},
            </if>
            <if test="payStatus != null">
                #{payStatus,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=INTEGER},
            </if>


        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ovft.configure.sys.bean.EduPayrecordExample"
            resultType="java.lang.Long">
        select count(*) from edu_payrecord
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update edu_payrecord
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.schoolId != null">
                school_id = #{record.schoolId,jdbcType=VARCHAR},
            </if>
            <if test="record.schoolName != null">
                school_name = #{record.schoolName,jdbcType=VARCHAR},
            </if>
            <if test="record.courseName != null">
                course_name = #{record.courseName,jdbcType=VARCHAR},
            </if>
            <if test="record.courseTeacher != null">
                course_teacher = #{record.courseTeacher,jdbcType=VARCHAR},
            </if>
            <if test="record.courseAddress != null">
                course_address = #{record.courseAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.courseStarttime != null">
                course_starttime = #{record.courseStarttime,jdbcType=VARCHAR},
            </if>
            <if test="record.startTime != null">
                start_time = #{record.startTime,jdbcType=VARCHAR},
            </if>
            <if test="record.endTime != null">
                end_time = #{record.endTime,jdbcType=VARCHAR},
            </if>
            <if test="record.payStatus != null">
                pay_status = #{record.payStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.courseId != null">
                course_id = #{record.courseId,jdbcType=INTEGER},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=INTEGER},
            </if>
            <if test="record.orderId != null">
                order_id = #{record.orderId,jdbcType=INTEGER},
            </if>


        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update edu_payrecord
        set id = #{record.id,jdbcType=INTEGER},
        school_id = #{record.schoolId,jdbcType=VARCHAR},
        school_name = #{record.schoolName,jdbcType=VARCHAR},
        course_name = #{record.courseName,jdbcType=VARCHAR},
        course_teacher = #{record.courseTeacher,jdbcType=VARCHAR},
        course_address = #{record.courseAddress,jdbcType=VARCHAR},
        course_starttime = #{record.courseStarttime,jdbcType=VARCHAR},
        start_time = #{record.startTime,jdbcType=VARCHAR},
        end_time = #{record.endTime,jdbcType=VARCHAR},
        pay_status = #{record.payStatus,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=INTEGER},
        course_id = #{record.courseId,jdbcType=INTEGER}
        is_delete=#{record.isDelete,jdbcType=INTEGER}
        order_id=#{record.orderId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ovft.configure.sys.bean.EduPayrecord">
        update edu_payrecord
        <set>
            <if test="schoolId != null">
                school_id = #{schoolId,jdbcType=VARCHAR},
            </if>
            <if test="schoolName != null">
                school_name = #{schoolName,jdbcType=VARCHAR},
            </if>
            <if test="courseName != null">
                course_name = #{courseName,jdbcType=VARCHAR},
            </if>
            <if test="courseTeacher != null">
                course_teacher = #{courseTeacher,jdbcType=VARCHAR},
            </if>
            <if test="courseAddress != null">
                course_address = #{courseAddress,jdbcType=VARCHAR},
            </if>
            <if test="courseStarttime != null">
                course_starttime = #{courseStarttime,jdbcType=VARCHAR},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=VARCHAR},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=VARCHAR},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ovft.configure.sys.bean.EduPayrecord">
    update edu_payrecord
    set school_id = #{schoolId,jdbcType=VARCHAR},
      school_name = #{schoolName,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      course_teacher = #{courseTeacher,jdbcType=VARCHAR},
      course_address = #{courseAddress,jdbcType=VARCHAR},
      course_starttime = #{courseStarttime,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      pay_status = #{payStatus,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER}
      is_delete = #{isDelete,jdbcType=INTEGER}
    where

    id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey2" parameterType="com.ovft.configure.sys.bean.EduPayrecord">
        update edu_payrecord
        set
        pay_status = #{payStatus}
        where order_id = #{orderId}


    </update>

    <!--3.查找线上报名门数5代表已付状态-->
    <select id="queryCourseNum" parameterType="Integer" resultType="Integer">
    select
    count(course_id)
    from
    edu_payrecord
    where
    user_id =#{user_id}
    and pay_status=5
  </select>
    <!--3.假删接口-->
    <update id="updateIsDeleteStaues" parameterType="Integer" >
           update edu_payrecord set is_delete=#{isDelete} where 1=1
        <if test="courseId != null">
            AND course_id = #{courseId}
        </if>
        <if test="orderId != null">
            AND order_id=#{orderId}
        </if>
  </update>

    <select id="selectByUserIdAndIsdelete" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from edu_payrecord
        where user_id = #{userId,jdbcType=INTEGER}  and is_delete=2
    </select>
    <select id="selectByUserIdAndIsdelete2" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from edu_payrecord
        where user_id = #{userId,jdbcType=INTEGER}  and is_delete=2 AND pay_status=5
    </select>
</mapper>