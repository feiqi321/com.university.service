<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ovft.configure.sys.dao.VacateMapper" >

    <select id="selectByUserId"  resultType="java.util.HashMap">
         select (select course_name from edu_course where course_id = edu_vacate.course_id) as courseName,
         vacate_time as vacateTime,contacts_phone as contactsPhone, contacts, vacate_name as vacateName,
         (select dict_name from edu_dict where dict_type='IS_CHACK_STATUS' and dict_value = edu_vacate.is_check) as isCheck,
          vacate_cause as vacateCause,
          (select dict_name from edu_dict where dict_type='VACATE_TYPE' and dict_value = edu_vacate.vacate_type) as vacateTypeName
         from edu_vacate
         where user_id = #{userId}
         order by create_time
    </select>

    <insert id="applyVacate" parameterType="com.ovft.configure.sys.bean.Vacate" useGeneratedKeys="true" keyProperty="vacateId">
         insert into edu_vacate(user_id, course_id, vacate_time, create_time, contacts_phone, contacts, vacate_name, is_check, vacate_cause, vacate_type)
         values (#{userId}, #{courseId}, #{vacateTime}, #{createTime}, #{contactsPhone}, #{contacts}, #{vacateName}, #{isCheck}, #{vacateCause}, #{vacateType})
    </insert>
    
    <update id="updateCheck">
        update edu_vacate
        set is_check = #{isCheck}
        where vacate_id = #{vacateId}
    </update>
    
    <!--<select id="selectUserCourse" resultType="java.util.HashMap" >
        select c1.course_id as courseId, c1.course_name as courseName from edu_course c1
        INNER JOIN (SELECT course_id from edu_order where user_id = #{userId} and pay_status = 1) c2 ON c1.course_id = c2.course_id
        WHERE <![CDATA[ c1.start_date <= #{today}]]>
        <![CDATA[ and c1.end_date >= #{today}]]>
    </select>-->
    <select id="selectUserCourse" resultType="java.util.HashMap" >
        select c.course_id as courseId, c.course_name as courseName
        from edu_order o
        LEFT JOIN edu_payment_info p on o.id = p.order_id
        LEFT JOIN edu_order_item i on o.id = i.order_id
        LEFT JOIN edu_course c on i.course_id = c.course_id
        where o.user_id = #{userId}
        and p.payment_status = 1
        <if test="today != null">
            <![CDATA[ and  c.start_date <= #{today}]]>
            <![CDATA[ and c.end_date >= #{today}]]>
        </if>

    </select>

</mapper>